JavaScript
1.JavaScript用法：
    HTML中的脚本必须位于<script>标签之间
    脚本可被放置在HTML页面的<body>和<head>部分中

2.JavaScript标签：
    在HTML中插入JavaScript，使用<script>标签
    在<script>之间书写代码

3.JavaScript使用限制：
    在HTML中，不限制脚本数量
    通常会把脚本放置于<head>标签中，不干扰页面内容


JavaScript输出
1.JavaScript通常用来操作HTML

2.文档输出：
    document.write("<p>this is my first JavaScript</p>")
    //可以直接加字符串或放在标签中输出


一、JavaScript语法
1.JavaScript语句：
    JavaScript语句向浏览器发出的命令。语句的作用使告诉浏览器该做什么。

2.分号：
    语句之间的分割是分号(;)
    注意：分号是可选项，有时候看到不已分号隔开的。

3.JavaScript代码：
    按照编写顺序依次执行

4.标识符：
    JavaScript标识符必须以字母、下划线或美元符号开始
    JavaScript关键字

5.JavaScript对大小写敏感

6.空格
    JavaScript会忽略多余的空格

7.代码换行
8.保留字

JavaScript数据类型
1.字符串（String）
2.数字（Number）
3.布尔（Boolean）
4.数组（Array）
5.对象（Object）
6.空（null）
7.未定义
8.可以通过赋值未null的方式清除变量


JavaScript运算符
1.算数运算符：
+  -  *  %  /  ++  --
2.赋值运算符：
=  +=  -=  *=  /=  %=
3.字符串操作
4.比较运算符：
==  ===  !=  !==  >  <  >=  <=
5.逻辑运算符：
&&  ||  !
6.条件运算符：
x<10?


JavaScript语句
条件语句
1.if...else
2.switch
循环语句
1.for循环、for/in
2.while循环、do...while


二、JavaScript函数
1.定义函数
    function 函数名(){
        函数体; 代码块
    }

2.函数调用
    函数在定义好了之后，不能自动执行，需要进行调用

    在<script>标签内调用
    在HTML文件中调用

3.带参数的函数
    在函数䣌调用中，也可以传递值，这些值被称为参数
    例：demo(arg1,arg2);
    参数的个数可以为任意多，每个参数通过","隔开
    参数在传递时，其顺序必须一致
    通过传递参数的个数以及参数的类型不同来完成不同的功能

4.带返回值的函数
    有时，我们需要将函数的值返回给调用他的地方
    通过return语句就可以实现
    注意：在使用return语句时，函数会停止执行，同时返回值

5.局部变量和全局变量
    局部变量 只能在当前函数中使用
    全局变量 无论在任何地方都可以使用


三、JavaScript事件
onClick         单击事件
onMouseOver     鼠标经过事件
onMouseOut      鼠标移出事件
onChange        文本内容改变事件
onSelect        文本框选中事件
onFocus         光标聚集事件
onBlur          移开光标事件
onLoad          网页加载事件
onUnload        关闭网页事件


四、JavaScriptDOM
1.DOM简介
    当网页被加载时，浏览器会创建页面的文档对象模型(Document Object Model)

    JavaScript 能够改变页面中的所有 HTML 元素
    JavaScript 能够改变页面中的所有 HTML 属性
    JavaScript 能够改变页面中的所有 CSS 样式
    JavaScript 能够对页面中的所有事件做出反应

2.DOM操作HTML
    注意：绝对不要在文档加载完成之后使用document.write()。这会覆盖该文档

    通过id找到HTML元素
    通过标签名找到HTML元素

    使用属性innerHTML改变HTML内容
    使用属性attribute改变HTML属性

3.DOM操作CSS
    document.getElementById(id).style.property = new style

4.DOM EventListener
    addEventListener():
    方法用于向指定元素添加事件句柄
    removeEventListener():
    移除方法添加的事件句柄


五、事件
1.事件流
    描述的是在页面中接受事件的顺序
事件冒泡
    由最具体的元素接收，然后逐级向上传播至最不具体的元素的节点（文档）
事件捕获：
    由最不具体的节点先接收事件，而最具体的节点应该是最后接收事件

2.事件处理
HTML事件处理
    直接添加到HTML结构中
DOM0级事件处理
    把一个函数赋值给一个事件处理程序属性
DOM2级事件处理
    addEventListener("事件名","事件处理函数","布尔值");
    true:事件捕获
    flase:事件冒泡
    removeEventListener()
IE事件处理程序
    attachEvent
    detachEvent